from tabulate import tabulate

from search_strategies import dfs


if __name__ == '__main__':
    repeat = 'Y'
    while repeat == 'Y':
        mode = input(tabulate(
                         [["1", "DFS"], ["2", "DLS"], ["3", "Вывести\nсправку"]],
                         headers=["№", "Стратегия"],
                         tablefmt="grid")
                     + '\n> ')

        match mode:
            case '1':
                debug_flag = input("\nРежим поэтапного вывода (Y/N):\n> ") == 'Y'
                dfs(debug_flag)
            case '2':
                debug_flag = input("\nРежим поэтапного вывода (Y/N):\n> ") == 'Y'
                depth_limit = int(input("Введите ограничение на глубину:\n> "))
                dfs(debug_flag, depth_limit)
            case '3':
                print(tabulate(
                         [["DFS",
                           "Поиск сначала в глубину всегда раскрывает одну из вершин на самом глубоком уровне дерева.\n"
                           "Останавливается, когда поиск достигает цели или заходит в тупик.\nВ последнем случае "
                           "выполняется возврат назад и раскрываются вершины на более верхних уровнях."],
                          ["DLS",
                           "Ограниченный по глубине поиск, чтобы избежать недостатков поиска в глубину, накладывает "
                           "ограничения\nна максимальную глубину пути.\nПоиск не оптимален. Если выбрано очень "
                           "малое ограничение глубины, данная стратегия даже неполна.\nВременная и емкостная сложность "
                           "аналогична поиску в глубину. Временная сложность O(b^L), где L – ограничение глубины.\n"
                           "Емкостная сложность – O(b*L)."]],
                         headers=["Название стратегии", "Описание"],
                         tablefmt="grid"))
            case _:
                print("Некорректный ввод")
        repeat = input("\nПерезапуск? (Y/N)\n > ")
