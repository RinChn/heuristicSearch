from tabulate import tabulate
from search_strategies import search

def input_h() -> str:
    h = input("\nЭвристическая функция h: (1/2)\n> ")
    while h != '1' and h != '2':
        print("Неправильный ввод, повторите попытку!\n")
        h = input("\nЭвристическая функция h: (1/2)\n> ")
    return h
    

if __name__ == '__main__':
    repeat = 'Y'
    while repeat.lower() == 'y':
        mode = input(tabulate(
                         [["1", "Запустить А*"], ["2", "Справка"]],
                         headers=["№", "Действие"],
                         tablefmt="grid")
                     + '\n> ')

        match mode:
            case '1':
                debug_flag = input("\nРежим пошагового вывода (Y/N):\n> ") == 'Y'
                h_flag = input_h()
                search(debug_flag, h_flag=int(h_flag))
            case '2':
                print(tabulate(
                         [["A*",
                           "\tСтратегия использует очередь с приоритетом, где первенство отдается тем узлам,\n"
                           "в которых значение аддитивной оценочной стоимости минимально.\n\tОценочная стоимость "
                           "вычисляется с помощью следующей формулы:\nf(n)=h(n)+g(n),\nгде h(n) - эвристическая "
                           "функция, g(n) - глубина изучаемого узла."],
                          ["h1",
                              "\tФункция, возвращающее общее количество фишек, стоящих не на своем месте."
                          ],
                          ["h2",
                              "\tФункция, возвращающая удаленность изучаемого состояния от конечного\n"
                              "с использованием манхэттенского расстояния."
                          ]],
                         headers=["Название", "Описание"],
                         tablefmt="grid"))
            case _:
                print("Некорректный ввод")
        repeat = input("\nПерезапуск? (Y/N)\n > ")
